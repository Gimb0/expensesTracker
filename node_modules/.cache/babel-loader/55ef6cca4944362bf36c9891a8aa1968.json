{"ast":null,"code":"var _jsxFileName = \"/Users/gimbo/Development/financesite/frontend/src/components/CategoryModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nexport default class ExpenseModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.list) {\n        if (this.checkCategoryExists(value)) {\n          value = this.findCategoryID(value);\n          console.log(\"category exists\");\n        } else {}\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.findCategoryID = category => {\n      for (var cat of this.state.categories) if (cat.category === category) return cat.id;\n    };\n\n    this.findCategory = id => {\n      for (var cat of this.state.categories) if (cat.id === id) return cat.category;\n    };\n\n    this.checkCategoryExists = category => {\n      for (var cat of this.state.categories) {\n        if (category === cat.category) return true;\n      }\n\n      return false;\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem,\n      categories: this.props.categories\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, \" New Category \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"expense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"expense\",\n      value: this.state.activeItem.expense,\n      onChange: this.handleChange,\n      placeholder: \"Enter Expense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => onSave(this.state.activeItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/gimbo/Development/financesite/frontend/src/components/CategoryModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","ExpenseModal","constructor","props","handleChange","e","name","value","target","list","checkCategoryExists","findCategoryID","console","log","activeItem","state","setState","category","cat","categories","id","findCategory","render","toggle","onSave","expense"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nexport default class ExpenseModal extends Component {\n    constructor(props) {\n    \tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveItem: this.props.activeItem,\n\t\t\tcategories: this.props.categories\n\t\t};\n\t}\n\t\n    handleChange = e => {\n\t\tlet { name, value } = e.target;\n\t\tif(e.target.list) {\n\t\t\tif(this.checkCategoryExists(value)) {\n\t\t\t\tvalue = this.findCategoryID(value);\n\t\t\t\tconsole.log(\"category exists\")\n\t\t\t} else {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tconst activeItem = { ...this.state.activeItem, [name]: value };\n\t\tthis.setState({ activeItem });\n\t};\n\n\tfindCategoryID = category => {\n\t\tfor(var cat of this.state.categories)\n\t\t\tif(cat.category === category)\n\t\t\t\treturn cat.id;\n\t}\n\n\tfindCategory = id => {\n\t\tfor(var cat of this.state.categories)\n\t\t\tif(cat.id === id)\n\t\t\t\treturn cat.category;\n\t}\n\n\tcheckCategoryExists = category => {\n\t\tfor(var cat of this.state.categories) {\n\t\t\tif(category === cat.category)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\trender() {\n\t\tconst { toggle, onSave } = this.props;\n\t\treturn (\n\t\t\t<Modal isOpen={true} toggle={toggle}>\n\t\t\t<ModalHeader toggle={toggle}> New Category </ModalHeader>\n\t\t\t<ModalBody>\n\t\t\t\t<Form>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"expense\">Category</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"expense\"\n\t\t\t\t\t\tvalue={this.state.activeItem.expense}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Enter Expense\"\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t</Form>\n\t\t\t</ModalBody>\n\t\t\t<ModalFooter>\n\t\t\t\t<Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n\t\t\t\t\tSave\n\t\t\t\t</Button>\n\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t);\n    }\n}"]},"metadata":{},"sourceType":"module"}