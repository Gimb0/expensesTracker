{"ast":null,"code":"var _jsxFileName = \"/Users/gimbo/Development/financesite/frontend/src/components/CustomModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label, InputGroupAddon, InputGroupText, InputGroup, Col, Row } from \"reactstrap\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.list) {\n        if (this.state.categories.category.includes(value)) {\n          value = this.findCategoryID(value);\n        } else {}\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.findCategoryID = category => {\n      for (var cat of this.state.categories) if (cat.category === category) return cat.id;\n    };\n\n    this.findCategory = id => {\n      for (var cat of this.state.categories) if (cat.id === id) return cat.category;\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem,\n      categories: this.props.categories\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, \" Expense \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"expense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    }, \"Expense\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"expense\",\n      value: this.state.activeItem.expense,\n      onChange: this.handleChange,\n      placeholder: \"Enter Expense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }\n    }, \"$\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      name: \"amount\",\n      value: this.state.activeItem.amount,\n      onChange: this.handleChange,\n      placeholder: \"Enter expense amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"date\",\n      value: this.state.activeItem.date,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"categoryID\",\n      value: this.findCategory(this.state.activeItem.category),\n      onChange: this.handleChange,\n      placeholder: \"Enter category\",\n      list: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"categoryID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }\n    }, this.state.categories.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n      key: key,\n      value: item.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 8\n      }\n    })))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => onSave(this.state.activeItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/gimbo/Development/financesite/frontend/src/components/CustomModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","InputGroupAddon","InputGroupText","InputGroup","Col","Row","CustomModal","constructor","props","handleChange","e","name","value","target","list","state","categories","category","includes","findCategoryID","activeItem","setState","cat","id","findCategory","render","toggle","onSave","expense","amount","date","map","item","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label, InputGroupAddon, InputGroupText, InputGroup, Col, Row } from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n    \tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveItem: this.props.activeItem,\n\t\t\tcategories: this.props.categories\n\t\t};\n\t}\n\t\n    handleChange = e => {\n\t\tlet { name, value } = e.target;\n\t\tif(e.target.list) {\n\t\t\tif(this.state.categories.category.includes(value)) {\n\t\t\t\tvalue = this.findCategoryID(value);\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\t\tconst activeItem = { ...this.state.activeItem, [name]: value };\n\t\tthis.setState({ activeItem });\n\t};\n\n\tfindCategoryID = category => {\n\t\tfor(var cat of this.state.categories)\n\t\t\tif(cat.category === category)\n\t\t\t\treturn cat.id;\n\t}\n\n\tfindCategory = id => {\n\t\tfor(var cat of this.state.categories)\n\t\t\tif(cat.id === id)\n\t\t\t\treturn cat.category;\n\t}\n\n\trender() {\n\t\tconst { toggle, onSave } = this.props;\n\t\treturn (\n\t\t\t<Modal isOpen={true} toggle={toggle}>\n\t\t\t<ModalHeader toggle={toggle}> Expense </ModalHeader>\n\t\t\t<ModalBody>\n\t\t\t\t<Form>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"expense\">Expense</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"expense\"\n\t\t\t\t\t\tvalue={this.state.activeItem.expense}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Enter Expense\"\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Label for=\"amount\">Amount</Label>\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t<InputGroupText>$</InputGroupText>\n\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tname=\"amount\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.activeItem.amount}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter expense amount\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Label for=\"date\">Date</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\t\t\tvalue={this.state.activeItem.date}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"category\">\n\t\t\t\t\t\tCategory\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"categoryID\"\n\t\t\t\t\t\tvalue={this.findCategory(this.state.activeItem.category)}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Enter category\"\n\t\t\t\t\t\tlist=\"category\"\n\t\t\t\t\t/>\n\t\t\t\t\t<datalist id=\"categoryID\">\n\t\t\t\t\t\t{this.state.categories.map((item, key) =>\n\t\t\t\t\t\t\t<option key={key} value={item.category} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</datalist>\n\t\t\t\t\t\n\t\t\t\t</FormGroup>\n\t\t\t\t</Form>\n\t\t\t</ModalBody>\n\t\t\t<ModalFooter>\n\t\t\t\t<Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n\t\t\t\t\tSave\n\t\t\t\t</Button>\n\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t);\n    }\n}"]},"metadata":{},"sourceType":"module"}