{"ast":null,"code":"var _jsxFileName = \"/Users/gimbo/Development/financesite/frontend/src/components/ExpenseModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label, InputGroupAddon, InputGroupText, InputGroup, Col, Row } from \"reactstrap\";\nexport default class ExpenseModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.list) {\n        if (this.checkCategoryExists(value)) {\n          value = this.findCategoryID(value);\n          console.log(\"category exists\");\n        }\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.findCategoryID = category => {\n      for (var cat of this.state.categories) if (cat.category === category) return cat.id;\n    };\n\n    this.findCategory = id => {\n      for (var cat of this.state.categories) if (cat.id === id) return cat.category;\n    };\n\n    this.checkCategoryExists = category => {\n      for (var cat of this.state.categories) {\n        if (category === cat.category) return true;\n      }\n\n      return false;\n    };\n\n    this.verifyExpense = () => {\n      if (this.checkCategoryExists(this.state.activeItem.category)) this.props.onSave(this.state.activeItem);else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      error: false,\n      activeItem: this.props.activeItem,\n      categories: this.props.categories\n    };\n  }\n\n  render() {\n    const {\n      toggle\n    } = this.props;\n    var displayError = null;\n\n    if (this.state.error) {\n      displayError = /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      }, \"Category does not exist!\");\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }\n    }, \" Expense \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"expense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, \"Expense\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"expense\",\n      value: this.state.activeItem.expense,\n      onChange: this.handleChange,\n      placeholder: \"Enter Expense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }\n    }, \"$\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      name: \"amount\",\n      value: this.state.activeItem.amount,\n      onChange: this.handleChange,\n      placeholder: \"Enter expense amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"date\",\n      value: this.state.activeItem.date,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"category\",\n      value: this.findCategory(this.state.activeItem.category),\n      onChange: this.handleChange,\n      placeholder: \"Enter category\",\n      list: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }, this.state.categories.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n      key: key,\n      value: item.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }\n    })))), displayError)), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: this.verifyExpense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/gimbo/Development/financesite/frontend/src/components/ExpenseModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","InputGroupAddon","InputGroupText","InputGroup","Col","Row","ExpenseModal","constructor","props","handleChange","e","name","value","target","list","checkCategoryExists","findCategoryID","console","log","activeItem","state","setState","category","cat","categories","id","findCategory","verifyExpense","onSave","error","render","toggle","displayError","color","expense","amount","date","map","item","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label, InputGroupAddon, InputGroupText, InputGroup, Col, Row } from \"reactstrap\";\n\nexport default class ExpenseModal extends Component {\n    constructor(props) {\n    \tsuper(props);\n\t\tthis.state = {\n\t\t\terror: false,\n\t\t\tactiveItem: this.props.activeItem,\n\t\t\tcategories: this.props.categories\n\t\t};\n\t}\n\t\n    handleChange = e => {\n\t\tlet { name, value } = e.target;\n\t\tif(e.target.list) {\n\t\t\tif(this.checkCategoryExists(value)) {\n\t\t\t\tvalue = this.findCategoryID(value);\n\t\t\t\tconsole.log(\"category exists\")\n\t\t\t}\n\t\t}\n\t\tconst activeItem = { ...this.state.activeItem, [name]: value };\n\t\tthis.setState({ activeItem });\n\t};\n\n\tfindCategoryID = category => {\n\t\tfor(var cat of this.state.categories)\n\t\t\tif(cat.category === category)\n\t\t\t\treturn cat.id;\n\t}\n\n\tfindCategory = id => {\n\t\tfor(var cat of this.state.categories)\n\t\t\tif(cat.id === id)\n\t\t\t\treturn cat.category;\n\t}\n\n\tcheckCategoryExists = category => {\n\t\tfor(var cat of this.state.categories) {\n\t\t\tif(category === cat.category)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tverifyExpense = () => {\n\t\tif(this.checkCategoryExists(this.state.activeItem.category))\n\t\t\tthis.props.onSave(this.state.activeItem)\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\terror: true\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { toggle } = this.props;\n\t\tvar displayError = null;\n\t\tif(this.state.error) {\n\t\t\tdisplayError = (<p style={{color: 'red'}}>Category does not exist!</p>)\n\t\t}\n\n\t\treturn (\n\t\t\t<Modal isOpen={true} toggle={toggle}>\n\t\t\t<ModalHeader toggle={toggle}> Expense </ModalHeader>\n\t\t\t<ModalBody>\n\t\t\t\t<Form>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"expense\">Expense</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"expense\"\n\t\t\t\t\t\tvalue={this.state.activeItem.expense}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Enter Expense\"\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Label for=\"amount\">Amount</Label>\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t<InputGroupText>$</InputGroupText>\n\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tname=\"amount\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.activeItem.amount}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter expense amount\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Label for=\"date\">Date</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\t\t\tvalue={this.state.activeItem.date}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"category\">\n\t\t\t\t\t\tCategory\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\tvalue={this.findCategory(this.state.activeItem.category)}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Enter category\"\n\t\t\t\t\t\tlist=\"category\"\n\t\t\t\t\t/>\n\t\t\t\t\t<datalist id=\"category\">\n\t\t\t\t\t\t{this.state.categories.map((item, key) =>\n\t\t\t\t\t\t\t<option key={key} value={item.category} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</datalist>\n\t\t\t\t</FormGroup>\n\t\t\t\t{ displayError }\n\t\t\t\t</Form>\n\t\t\t</ModalBody>\n\t\t\t<ModalFooter>\n\t\t\t\t<Button color=\"success\" onClick={this.verifyExpense}>\n\t\t\t\t\tSave\n\t\t\t\t</Button>\n\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t);\n    }\n}"]},"metadata":{},"sourceType":"module"}